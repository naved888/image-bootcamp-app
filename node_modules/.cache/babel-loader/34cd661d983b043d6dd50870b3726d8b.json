{"remainingRequest":"/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/babel-loader/lib/index.js!/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/vue-media-recorder/src/components/VideoCapture.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/vue-media-recorder/src/components/VideoCapture.vue","mtime":499162500000},{"path":"/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IExvYWRlciBmcm9tICcuL0xvYWRlci52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlZpZGVvQ2FwdHVyZSIsCiAgcHJvcHM6IHsKICAgIHVwbG9hZFVybDogewogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgcmVjb3JkQnRuQ29udGVudDogewogICAgICBkZWZhdWx0OiAnUmVjb3JkJwogICAgfSwKICAgIHN0b3BCdG5Db250ZW50OiB7CiAgICAgIGRlZmF1bHQ6ICfil7wnCiAgICB9LAogICAgY2FuY2VsQnRuQ29udGVudDogewogICAgICBkZWZhdWx0OiAnQ2FuY2VsJwogICAgfSwKICAgIGRvbmVCdG5Db250ZW50OiB7CiAgICAgIGRlZmF1bHQ6ICdPSycKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIExvYWRlcjogTG9hZGVyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZXJyVGV4dDogbnVsbCwKICAgICAgaXNWYWxpZDogdHJ1ZSwKICAgICAgaXNVcGxvYWRpbmc6IGZhbHNlLAogICAgICBpc1JlY29yZGluZzogZmFsc2UsCiAgICAgIC8vIHJlY29yZGluZyBtb2RlIGlkZW50aWZpZXIKICAgICAgaXNGaW5pc2hlZDogZmFsc2UsCiAgICAgIC8vIGZpbmlzaGVkIHJlY29yZGluZyAtIGFjdGlvbiBidXR0b25zIGluZGljYXRvcgogICAgICByZWNvcmRlcjogbnVsbCwKICAgICAgLy8gY29tcG9uZW50IHdpZGUgTWVkaWFSZWNvcmRlcgogICAgICBjb25uZWN0aW9uOiBudWxsLAogICAgICAvLyBjb21wb25lbnQgd2lkZSBXZWJTb2NrZXQKICAgICAgdmlkZW9Vcmw6IG51bGwgLy8gbGluayB0byB2aWRlbyAtIGFzc2lnbmVkIHdoZW4gZG9uZSB3cml0aW5nIHZpZGVvIGZpbGUKCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmICghdGhpcy51cGxvYWRVcmwpIHRoaXMuZXJyVGV4dCA9ICdUaGVyZSBpcyBubyB1cGxvYWQgdXJsIGF2YWlsYWJsZSc7CiAgICB0aGlzLmdldFdlYlNvY2tldCgpOyAvLyBpbml0aWFsaXplIGNvbm5lY3Rpb24gdG8gV2ViU29ja2V0CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5yZXNldFZpZGVvKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyByZXNldCB2aWRlbyBkaXNwbGF5IHdpdGggbWVkaWEgZGV2aWNlIG1lZGlhIHN0cmVhbQogICAgcmVzZXRWaWRlbzogZnVuY3Rpb24gcmVzZXRWaWRlbygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuaXNGaW5pc2hlZCA9IGZhbHNlOwogICAgICB0aGlzLmlzUmVjb3JkaW5nID0gZmFsc2U7CiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTsKICAgICAgdGhpcy4kcmVmcy52aWRlb1JlYy5tdXRlZCA9IHRydWU7CiAgICAgIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsKICAgICAgICB2aWRlbzogewogICAgICAgICAgd2lkdGg6IHsKICAgICAgICAgICAgaWRlYWw6IDEyODAKICAgICAgICAgIH0sCiAgICAgICAgICBoZWlnaHQ6IHsKICAgICAgICAgICAgaWRlYWw6IDcyMAogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgYXVkaW86IHRydWUKICAgICAgfSkudGhlbih0aGlzLmdvdFN0cmVhbSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpcy5pc1ZhbGlkID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIHN0YXJ0IHJlY29vcmRpbmcKICAgIHJlY29yZDogZnVuY3Rpb24gcmVjb3JkKCkgewogICAgICBpZiAoIXRoaXMudXBsb2FkVXJsKSByZXR1cm47CiAgICAgIHRoaXMucmVjb3JkZXIuc3RhcnQoKTsKICAgICAgdGhpcy5pc1JlY29yZGluZyA9IHRydWU7CiAgICB9LAogICAgLy8gc3RvcCByZWNvcmRpbmcKICAgIHN0b3A6IGZ1bmN0aW9uIHN0b3AoKSB7CiAgICAgIHRoaXMucmVjb3JkZXIuc3RvcCgpOwogICAgICB0aGlzLmlzUmVjb3JkaW5nID0gZmFsc2U7CiAgICAgIHRoaXMuaXNGaW5pc2hlZCA9IHRydWU7CiAgICAgIHRoaXMuY29ubmVjdGlvbi5zZW5kKCJET05FIik7CiAgICB9LAogICAgLy8gcmVzZXQgdmlkZW8gZGlhcGx5IGFuZCBlbWl0IHZpZGVvIGZpbGUgdXJsCiAgICBkb25lOiBmdW5jdGlvbiBkb25lKCkgewogICAgICB0aGlzLnJlc2V0VmlkZW8oKTsKICAgICAgdGhpcy4kZW1pdCgiaW5wdXQiLCB0aGlzLnZpZGVvVXJsKTsKICAgIH0sCiAgICAvLyBpbml0aWFsaXplIE1lZGlhUmVjb3JkZXIgYW5kIHZpZGVvIGVsZW1lbnQgc291cmNlCiAgICBnb3RTdHJlYW06IGZ1bmN0aW9uIGdvdFN0cmVhbShtZWRpYVN0cmVhbSkgewogICAgICB0aGlzLnJlY29yZGVyID0gbmV3IE1lZGlhUmVjb3JkZXIobWVkaWFTdHJlYW0sIHsKICAgICAgICBtaW1lVHlwZTogInZpZGVvL3dlYm0iLAogICAgICAgIGF1ZGlvQml0c1BlclNlY29uZDogMTI4MDAwCiAgICAgIH0pOwogICAgICB0aGlzLnJlY29yZGVyLm9uZGF0YWF2YWlsYWJsZSA9IHRoaXMudmlkZW9EYXRhSGFuZGxlcjsKICAgICAgdGhpcy4kcmVmcy52aWRlb1JlYy5zcmMgPSBudWxsOwogICAgICB0aGlzLiRyZWZzLnZpZGVvUmVjLnNyY09iamVjdCA9IG1lZGlhU3RyZWFtOwogICAgICB0aGlzLnRvZ2dsZVZpZGVvKCk7CiAgICB9LAogICAgLy8gaGFuZGxlIHNlbmRpbmcgZGF0YSBmb3Igd3JpdGluZyB1c2luZyB0aGUgZ2l2ZW4gV2ViU29ja2V0CiAgICB2aWRlb0RhdGFIYW5kbGVyOiBmdW5jdGlvbiB2aWRlb0RhdGFIYW5kbGVyKGV2ZW50KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5pc1VwbG9hZGluZyA9IHRydWU7CiAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZXZlbnQuZGF0YSk7CgogICAgICByZWFkZXIub25sb2FkZW5kID0gZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi5jb25uZWN0aW9uLnNlbmQocmVhZGVyLnJlc3VsdCk7CiAgICAgIH07CiAgICB9LAogICAgLy8gaW5pdGlhbGl6ZSBXZWJTb2NrZXQKICAgIGdldFdlYlNvY2tldDogZnVuY3Rpb24gZ2V0V2ViU29ja2V0KCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciB3ZWJzb2NrZXRFbmRwb2ludCA9ICJ3c3M6Ly9taXN0ZXItcmVjb3JkZXIuaGVyb2t1YXBwLmNvbSI7IC8vIGNvbnN0IHdlYnNvY2tldEVuZHBvaW50ID0gIndzOi8vbG9jYWxob3N0OjMwMDAiOwoKICAgICAgdGhpcy5jb25uZWN0aW9uID0gbmV3IFdlYlNvY2tldCh3ZWJzb2NrZXRFbmRwb2ludCk7IC8vIGNvbnNvbGUubG9nKCdjb25uZWN0aW9uJywgdGhpcy5jb25uZWN0aW9uKQoKICAgICAgdGhpcy5jb25uZWN0aW9uLmJpbmFyeVR5cGUgPSAiYXJyYXlidWZmZXIiOwoKICAgICAgdGhpcy5jb25uZWN0aW9uLm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7CiAgICAgICAgLy8gY29uc29sZS5sb2coJ2RhdGEgYXZhaWxhYmxlJykKICAgICAgICBfdGhpczMudXBkYXRlVmlkZW9GaWxlKG1lc3NhZ2UuZGF0YSk7CgogICAgICAgIF90aGlzMy4kcmVmcy52aWRlb1JlYy5tdXRlZCA9IGZhbHNlOwogICAgICB9OwogICAgfSwKICAgIC8vIHVwZGF0ZSB2aWRlbyB3aGVuIGZpbGUgd3JpdHRlbgogICAgdXBkYXRlVmlkZW9GaWxlOiBmdW5jdGlvbiB1cGRhdGVWaWRlb0ZpbGUoZmlsZU5hbWUpIHsKICAgICAgdGhpcy52aWRlb1VybCA9IHRoaXMudXBsb2FkVXJsICsgZmlsZU5hbWUgKyAiLndlYm0iOyAvLyBjb25zb2xlLmxvZyh0aGlzLnZpZGVvVXJsKQoKICAgICAgdGhpcy50b2dnbGVWaWRlbygpOwogICAgICB0aGlzLiRyZWZzLnZpZGVvUmVjLnNyY09iamVjdCA9IG51bGw7CiAgICAgIHRoaXMuJHJlZnMudmlkZW9SZWMuc3JjID0gdGhpcy52aWRlb1VybDsKICAgICAgdGhpcy5pc1VwbG9hZGluZyA9IGZhbHNlOwogICAgfSwKICAgIC8vIHRvZ2dsZSB2aWRlbyBkaXNwbGF5CiAgICB0b2dnbGVWaWRlbzogZnVuY3Rpb24gdG9nZ2xlVmlkZW8oKSB7CiAgICAgIHRoaXMuJHJlZnMudmlkZW9SZWMubG9vcCA9ICF0aGlzLiRyZWZzLnZpZGVvUmVjLmxvb3A7CiAgICAgIHRoaXMuJHJlZnMudmlkZW9SZWMuY29udHJvbHMgPSAhdGhpcy4kcmVmcy52aWRlb1JlYy5jb250cm9sczsKICAgIH0KICB9Cn07"},{"version":3,"sources":["VideoCapture.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <section v-if=\"isValid\">\n    <section class=\"video-cap-container\">\n      <div v-show=\"!isUploading\" class=\"stream-container\">\n        <video ref=\"videoRec\" class=\"camera\" muted loop controls autoplay />\n        <template v-if=\"!isFinished\">\n          <button v-if=\"!isRecording\" @click=\"record\" class=\"btn flex-center\">{{recordBtnContent}}</button>\n          <button v-else @click=\"stop\" class=\"btn\">\n            <span style=\"font-size:3em;\">{{stopBtnContent}}</span>\n          </button>\n        </template>\n      </div>\n      <Loader v-show=\"isUploading\" />\n      <div class=\"controls\" v-if=\"isFinished && !isUploading && uploadUrl\">\n        <button type=\"button\" class=\"btn\" @click.prevent=\"resetVideo\">{{cancelBtnContent}}</button>\n        <button type=\"button\" class=\"btn\" @click.prevent=\"done\">{{doneBtnContent}}</button>\n      </div>\n      <h1 class=\"error-video\">{{errText}}</h1>\n    </section>\n  </section>\n</template>\n\n<script>\nimport Loader from './Loader.vue'\nexport default {\n  name: \"VideoCapture\",\n  props: {\n    uploadUrl: {\n      default: null\n    },\n    recordBtnContent: {\n      default: 'Record'\n    },\n    stopBtnContent: {\n      default: '◼'\n    },\n    cancelBtnContent: {\n      default: 'Cancel'\n    },\n    doneBtnContent: {\n      default: 'OK'\n    }\n  },\n  components: {\n    Loader\n  },\n  data() {\n    return {\n      errText: null,\n      isValid: true,\n      isUploading: false,\n      isRecording: false, // recording mode identifier\n      isFinished: false, // finished recording - action buttons indicator\n      recorder: null, // component wide MediaRecorder\n      connection: null, // component wide WebSocket\n      videoUrl: null // link to video - assigned when done writing video file\n    };\n  },\n  created() {\n    if (!this.uploadUrl) this.errText = 'There is no upload url available'\n    this.getWebSocket(); // initialize connection to WebSocket\n  },\n  mounted() {\n    this.resetVideo();\n  },\n  methods: {\n    // reset video display with media device media stream\n    resetVideo() {\n      this.isFinished = false;\n      this.isRecording = false;\n      this.isLoading = true;\n      this.$refs.videoRec.muted = true;\n      navigator.mediaDevices\n        .getUserMedia({\n          video: {\n            width: { ideal: 1280 },\n            height: { ideal: 720 }\n          },\n          audio: true\n        })\n        .then(this.gotStream)\n        .catch(() => (this.isValid = false));\n    },\n    // start recoording\n    record() {\n      if (!this.uploadUrl) return;\n      this.recorder.start();\n      this.isRecording = true;\n    },\n    // stop recording\n    stop() {\n      this.recorder.stop()\n      this.isRecording = false;\n      this.isFinished = true;\n      this.connection.send(\"DONE\")\n    },\n    // reset video diaply and emit video file url\n    done() {\n      this.resetVideo();\n      this.$emit(\"input\", this.videoUrl);\n    },\n    // initialize MediaRecorder and video element source\n    gotStream(mediaStream) {\n      this.recorder = new MediaRecorder(mediaStream, {\n        mimeType: \"video/webm\",\n        audioBitsPerSecond: 128000\n      });\n      this.recorder.ondataavailable = this.videoDataHandler;\n      this.$refs.videoRec.src = null;\n      this.$refs.videoRec.srcObject = mediaStream;\n      this.toggleVideo();\n    },\n    // handle sending data for writing using the given WebSocket\n    videoDataHandler(event) {\n      this.isUploading = true;\n      let reader = new FileReader();\n      reader.readAsArrayBuffer(event.data);\n      reader.onloadend = () => {\n        this.connection.send(reader.result);\n      };\n    },\n    // initialize WebSocket\n    getWebSocket() {\n      const websocketEndpoint = \"wss://mister-recorder.herokuapp.com\";\n      // const websocketEndpoint = \"ws://localhost:3000\";\n      this.connection = new WebSocket(websocketEndpoint);\n      // console.log('connection', this.connection)\n      this.connection.binaryType = \"arraybuffer\";\n      this.connection.onmessage = message => {\n        // console.log('data available')\n        this.updateVideoFile(message.data);\n        this.$refs.videoRec.muted = false;\n      };\n    },\n    // update video when file written\n    updateVideoFile(fileName) {\n      this.videoUrl = this.uploadUrl + fileName + \".webm\";\n      // console.log(this.videoUrl)\n      this.toggleVideo();\n      this.$refs.videoRec.srcObject = null;\n      this.$refs.videoRec.src = this.videoUrl;\n      this.isUploading = false;\n    },\n    // toggle video display\n    toggleVideo() {\n      this.$refs.videoRec.loop = !this.$refs.videoRec.loop;\n      this.$refs.videoRec.controls = !this.$refs.videoRec.controls;\n    }\n  }\n};\n</script>\n\n"],"sourceRoot":"node_modules/vue-media-recorder/src/components"}]}
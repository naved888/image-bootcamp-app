{"remainingRequest":"/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/naved888/Naved/projects/image-edit-bootcamp/src/components/UploadImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/naved888/Naved/projects/image-edit-bootcamp/src/components/UploadImage.vue","mtime":1613229786351},{"path":"/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/naved888/Naved/projects/image-edit-bootcamp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgZGV0YWlsczogW10sCiAgICAgICAgICAgIHRleHQ6ICcnLAogICAgICAgICAgICBpbWc6ICcnLAogICAgICAgICAgICByYXRpbmc6IG51bGwKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGdldEZpbGUoZXZlbnQpIHsKICAgICAgICAgICAgdGhpcy5pbWcgPSBldmVudC50YXJnZXQuZmlsZXNbMF0ubmFtZQogICAgICAgIH0sCgogICAgICAgIG9uU3VibWl0KGV2ZW50KSB7CiAgICAgICAgLy8gZXZlbnQucHJldmVudERlZmF1bHQoKQogICAgICAgIHRoaXMuZGV0YWlscy5wdXNoKHsKICAgICAgICAgICAgImlkIjogZXZlbnQudGltZVN0YW1wLAogICAgICAgICAgICAibmFtZSI6IHRoaXMudGV4dCwKICAgICAgICAgICAgInJhdGluZ3MiOiB0aGlzLnJhdGluZywKICAgICAgICAgICAgInBhdGgiOiB0aGlzLmltZywKICAgICAgICB9KQogICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGV0YWlscyk7CiAgICAgICAgbG9jYWxTdG9yYWdlLmRldGFpbHMgPSBKU09OLnN0cmluZ2lmeSh0aGlzLmRldGFpbHMpCiAgICAgICAgLy8gIGlmICghd2luZG93LkZpbGUgfHwgIXdpbmRvdy5GaWxlUmVhZGVyIHx8ICF3aW5kb3cuRmlsZUxpc3QgfHwgIXdpbmRvdy5CbG9iKSB7CiAgICAgICAgLy8gICAgICAgICAgICAgYWxlcnQoJ1RoZSBGaWxlIEFQSXMgYXJlIG5vdCBmdWxseSBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyLicpOwogICAgICAgIC8vICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAvLyAgICAgICAgIH0KCiAgICAgICAgLy8gICAgICAgICB2YXIgaW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZmlsZWlucHV0Jyk7CiAgICAgICAgLy8gICAgICAgICBpZiAoIWlucHV0KSB7CiAgICAgICAgLy8gICAgICAgICAgICAgYWxlcnQoIlVtLCBjb3VsZG4ndCBmaW5kIHRoZSBmaWxlaW5wdXQgZWxlbWVudC4iKTsKICAgICAgICAvLyAgICAgICAgIH0KICAgICAgICAvLyAgICAgICAgIGVsc2UgaWYgKCFpbnB1dC5maWxlcykgewogICAgICAgIC8vICAgICAgICAgICAgIGFsZXJ0KCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzZWVtIHRvIHN1cHBvcnQgdGhlIGBmaWxlc2AgcHJvcGVydHkgb2YgZmlsZSBpbnB1dHMuIik7CiAgICAgICAgLy8gICAgICAgICB9CiAgICAgICAgLy8gICAgICAgICBlbHNlIGlmICghaW5wdXQuZmlsZXNbMF0pIHsKICAgICAgICAvLyAgICAgICAgICAgICBhbGVydCgiUGxlYXNlIHNlbGVjdCBhIGZpbGUgYmVmb3JlIGNsaWNraW5nICdMb2FkJyIpOwogICAgICAgIC8vICAgICAgICAgfQogICAgICAgIC8vICAgICAgICAgZWxzZSB7CiAgICAgICAgLy8gICAgICAgICAgICAgdmFyIGZpbGUgPSBpbnB1dC5maWxlc1swXTsKICAgICAgICAvLyAgICAgICAgICAgICB2YXIgZnIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgIC8vICAgICAgICAgICAgIGZyLnJlYWRBc0RhdGFVUkwoZmlsZSk7CgogICAgICAgIC8vICAgICAgICAgICAgIHZhciBibG9iID0gbmV3IEJsb2IoW2ZpbGVdLCB7IHR5cGU6ICJpbWFnZS9wbmciIH0pOy8vIGNoYW5nZSByZXN1bHRCeXRlIHRvIGJ5dGVzCgogICAgICAgIC8vICAgICAgICAgICAgIHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpOwogICAgICAgIC8vICAgICAgICAgICAgIGxpbmsuaHJlZiA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpOwogICAgICAgIC8vICAgICAgICAgICAgIGxpbmsuZG93bmxvYWQgPSB0aGlzLmltZzsKICAgICAgICAvLyAgICAgICAgICAgICBsaW5rLmNsaWNrKCk7CiAgICAgICAgLy8gICAgICAgICB9CiAgICAgIH0sCiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgIHRoaXMuZGV0YWlscyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmRldGFpbHMpCiAgICB9Cn0K"},{"version":3,"sources":["UploadImage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UploadImage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"main-container\">\n        <div>\n            <b-form @submit=\"onSubmit\">\n                <b-form-file accept=\"image/jpeg, image/png, image/gif\" @change=\"getFile\" id=\"fileinput\"  class=\"input-file\"></b-form-file>\n                <b-form-input v-model=\"text\" placeholder=\"Enter your name\"></b-form-input>\n                 <b-form-rating id=\"rating-10\" variant=\"warning\" v-model=\"rating\" stars=\"10\"></b-form-rating>\n                <b-button type=\"submit\" variant=\"primary\"  class=\"btn btn-success upload-btn\">Upload</b-button>\n            </b-form>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            details: [],\n            text: '',\n            img: '',\n            rating: null\n        }\n    },\n    methods: {\n        getFile(event) {\n            this.img = event.target.files[0].name\n        },\n\n        onSubmit(event) {\n        // event.preventDefault()\n        this.details.push({\n            \"id\": event.timeStamp,\n            \"name\": this.text,\n            \"ratings\": this.rating,\n            \"path\": this.img,\n        })\n        console.log(this.details);\n        localStorage.details = JSON.stringify(this.details)\n        //  if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\n        //             alert('The File APIs are not fully supported in this browser.');\n        //             return;\n        //         }\n\n        //         var input = document.getElementById('fileinput');\n        //         if (!input) {\n        //             alert(\"Um, couldn't find the fileinput element.\");\n        //         }\n        //         else if (!input.files) {\n        //             alert(\"This browser doesn't seem to support the `files` property of file inputs.\");\n        //         }\n        //         else if (!input.files[0]) {\n        //             alert(\"Please select a file before clicking 'Load'\");\n        //         }\n        //         else {\n        //             var file = input.files[0];\n        //             var fr = new FileReader();\n        //             fr.readAsDataURL(file);\n\n        //             var blob = new Blob([file], { type: \"image/png\" });// change resultByte to bytes\n\n        //             var link = document.createElement('a');\n        //             link.href = window.URL.createObjectURL(blob);\n        //             link.download = this.img;\n        //             link.click();\n        //         }\n      },\n    },\n    mounted() {\n       this.details = JSON.parse(localStorage.details)\n    }\n}\n</script>\n\n<style scoped>\n</style>"]}]}